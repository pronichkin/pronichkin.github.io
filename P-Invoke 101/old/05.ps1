 <#
    # 7

    Great, let's finally add some actual code to run in our method.

  #>

$Code = @'

    public void MyBox()
    {       
        MessageBox.Show( "This is the message", "This is my caption" );
    }
'@

$TypeParam = @{

    MemberDefinition     = $Code
    Name                 = 'myType04'
    UsingNamespace       = 'System.Windows.Forms'
    ReferencedAssemblies = 'System.Windows.Forms.dll'
}
Add-Type @TypeParam

 <# 
    Now we've created another type, named “Microsoft.PowerShell.Commands.AddType.AutoGeneratedTypes.myType04”

    It has a method called “MyBox”. But we cannot call it from the definition of the class, because it's not static.

    To use a non-static method, we need to create an instance of the class first.
  #>

$Instance = [Microsoft.PowerShell.Commands.AddType.AutoGeneratedTypes.myType04]::new()

 <#
    Finally, we can use an instance of the class (new object) to call the method and show a message box!
  #>

$Instance.MyBox()

 <#
    If you take a look at “MyBox” item, this is of type “System.Management.Automation.PSMethod”.
    Because, naturally, it's a method.
  #>